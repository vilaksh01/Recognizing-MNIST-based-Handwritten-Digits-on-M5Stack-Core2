#ifdef INCLUDED_BY_NEUTON_C

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 1
#define NEUTON_MODEL_QLEVEL 32
#define NEUTON_MODEL_FLOAT_SUPPORT 1
#define NEUTON_MODEL_TASK_TYPE 0  // multiclass classification
#define NEUTON_MODEL_NEURONS_COUNT 47
#define NEUTON_MODEL_WEIGHTS_COUNT 277
#define NEUTON_MODEL_INPUTS_COUNT 255
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 255
#define NEUTON_MODEL_OUTPUTS_COUNT 10
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 0
#define NEUTON_BITMASK_ENABLED 0

/* Limits */
static const float modelInputMin[] = {
	249, 3347, 3664, 3981, 5681, 4729, 4413, 4097, 4100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
static const float modelInputMax[] = {
	47302, 43455, 43015, 42705, 43340, 46858, 50010, 55136, 59623, 63471, 66360,
	68289, 69900, 70551, 76477, 70873, 70550, 69604, 69301, 67396, 65489, 66089,
	66718, 67357, 76126, 66784, 67098, 66772, 66112, 66615, 67254, 67574, 67893,
	68213, 68400, 76430, 69361, 73877, 66469, 67418, 72573, 69000, 68935, 69575,
	70535, 70972, 71931, 72571, 73210, 69680, 70508, 71468, 72428, 70253, 70893,
	71213, 71853, 69347, 69667, 69987, 70307, 70948, 69010, 69330, 69650, 69970,
	70290, 70610, 68310, 63506, 63551, 64822, 66094, 67047, 67680, 68314, 68949,
	69264, 69260, 69577, 63493, 63487, 63803, 63479, 63477, 63474, 63472, 60366,
	61004, 61959, 62913, 63547, 64181, 64815, 65128, 65441, 65432, 65422, 65093,
	64445, 64118, 63472, 63147, 62502, 62179, 61536, 61214, 60572, 60250, 59929,
	59608, 59287, 59286, 58966, 48403, 35026, 34704, 34063, 33741, 33419, 33098,
	33096, 32775, 32773, 32772, 32770, 32769, 32768, 32765, 32762, 33078, 33395,
	33712, 33709, 34027, 34025, 34344, 34342, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

static const float modelOutputMin[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
static const float modelOutputMax[] = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };

/* Types */
typedef float coeff_t;
typedef float weight_t;
typedef double acc_signed_t;
typedef double acc_unsigned_t;
typedef uint8_t sources_size_t;
typedef uint16_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Structure */
static const weight_t modelWeights[] = {
	-0.13778314, -0.0045708031, -0.95754898, 0.90310872, -0.091957584, 0.10113168,
	0.20349717, -0.35549355, 1, 0.99951172, 0.90625012, 0.047038794, 0.076159388,
	-0.94513679, 0.49287331, -0.29996347, -0.11905687, 0.43182886, 0, 0.96319896,
	-0.59510452, 0.16630998, 0.90520078, -0.94030291, -0.20379066, -0.60859245,
	-0.45341918, -0.77624297, 0.99975383, -0.26502848, 0.67187506, -0.5, 1,
	0.5, -0.5, 1, 0, 0.95198762, -0.51674014, -0.71832567, -0.20986091, -0.38803118,
	0.43774843, -0.6875, 0.93213612, 0.11356415, 1, 1, -0.0625, 0.93304908,
	-0.43389583, -1, -0.32294691, -0.24188697, 0.89062512, 0.062022652, -0.91036808,
	0.75549859, -0.08266259, 0.093909152, 0.0091103315, -0.7558043, -0.83757281,
	-0.015255606, 0.43183628, -1, 0.66998291, -0.79785371, -0.80618238, 0.061571985,
	-0.60691035, 0.81205964, 0.098450392, -1, 0.91112351, -0.15631136, 0.99999988,
	-0.34916297, 0.18320237, 0.93775535, -0.45271, -0.9745003, -0.65422267,
	-0.99999833, 0.34555182, -0.090971768, 0.78457898, 0.06269297, -0.96875,
	0.625, 0, 0.8735882, -0.49596643, -0.20562032, 0.095815085, 0.60546887,
	-0.092237949, -0.5, 1, 0, -1, -0.5, 0.5, -0.21605052, 0.7858023, -1, 0.25931066,
	0.99999988, -0.19996071, -0.55037493, -0.21706474, -1, 0.27154243, -1,
	0.25, -0.71204799, 0.5970217, 0.020090593, -0.953125, 1, 0.066827774, -0.82323521,
	0.96494055, -0.95363295, 0.99956381, -0.52556908, -0.038085938, 0.62158203,
	-0.48447219, -0.97942895, -1, 0.42038536, -0.19495417, 0.6875, -0.52481616,
	0.1919753, 0.43719763, -1, 0.89297068, -0.061827719, 0.79640311, -0.98208034,
	0.99351513, -0.79303634, -1, 0.036404371, -0.98828197, -1, -1, -1, 0.26621985,
	0.99999988, 0.89985889, -0.99969214, -0.56152934, -0.76147681, 0.99999988,
	-0.49704862, -0.92319137, -0.63724887, 0.2217513, -0.018052898, -1, -0.42558435,
	1, -0.52274388, -1, -0.098791122, -1, 0.1469817, -0.48647448, 0.023283372,
	0.059292164, -0.9765625, 1, 0.36802128, 1, -0.515625, -0.19408813, -0.93134922,
	0.99998474, 0.64404202, -0.83187044, 0.2553938, 0.34439063, -1, -0.81251144,
	-0.51984906, 0.33574873, -0.080184937, -0.38521463, -0.27801239, -1, -0.74968612,
	-0.87251711, 0.30192298, 0.5939762, -0.96183413, -0.23502852, -0.040809888,
	1, -0.99999821, 0.65594482, -0.96422279, 0.57299334, -0.30687711, 1, 1,
	-0.22139502, -0.99928534, -1, 0.22214098, -0.99973321, -0.041105479, -0.31091875,
	-0.79493004, -0.57333785, -0.18001699, 0.79177535, -0.02086544, 1, -0.875,
	0.875, -0.75, 0.31623268, -0.54493219, -0.9800303, 0.88004231, 0.24006619,
	0.9054265, -0.97261083, -0.9999994, 0.86383057, 0.45651743, 0.71473032,
	-0.93767995, 0.99919152, -1, -0.94726199, 0.40358162, -0.3491599, -0.99979836,
	0.65399975, 0.26309979, 0.34019893, -0.065422535, -0.95934069, -0.88205487,
	0.67393434, 0.63255954, -1, 1, 0.10522582, 1, -0.60203165, -1, -1, 0, 0.034380198,
	-0.52545559, -0.25881577, -0.041670885, -0.99999899, 0.49558014, -0.4588511,
	0.44710472, 0.092921242, 0.38825741, -0.87088561, -0.26553971, -0.26318142,
	0.27561566, 0.68945366, -0.94892144, -0.98829263, -0.44330609, 0.13059235 };

static const sources_size_t modelLinks[] = {
	7, 24, 25, 27, 60, 255, 2, 8, 30, 37, 39, 255, 0, 0, 5, 31, 33, 255, 0,
	9, 15, 25, 26, 31, 255, 2, 5, 7, 16, 37, 255, 2, 9, 24, 38, 105, 255, 1,
	5, 20, 56, 92, 255, 0, 11, 39, 44, 48, 255, 0, 23, 25, 37, 43, 255, 0,
	0, 2, 17, 25, 255, 4, 17, 22, 31, 66, 255, 3, 10, 255, 20, 23, 29, 38,
	52, 255, 8, 1, 26, 36, 124, 255, 1, 13, 255, 0, 3, 13, 6, 113, 255, 0,
	29, 34, 72, 102, 255, 8, 1, 2, 5, 6, 255, 20, 29, 38, 60, 72, 255, 8, 18,
	20, 39, 58, 255, 30, 39, 45, 60, 93, 255, 8, 5, 27, 74, 80, 103, 255, 3,
	7, 12, 27, 76, 255, 5, 13, 39, 51, 66, 255, 18, 28, 77, 112, 119, 255,
	0, 12, 23, 24, 255, 0, 1, 2, 3, 3, 255, 4, 16, 22, 26, 255, 0, 2, 3, 18,
	120, 255, 6, 18, 28, 255, 0, 1, 2, 3, 15, 255, 2, 3, 28, 12, 17, 255, 0,
	9, 30, 8, 34, 255, 5, 17, 30, 31, 32, 255, 0, 1, 2, 3, 7, 33, 255, 23,
	17, 31, 82, 92, 255, 8, 20, 34, 35, 255, 0, 1, 2, 3, 32, 41, 255, 7, 19,
	37, 255, 0, 1, 2, 3, 13, 51, 81, 255, 31, 6, 20, 24, 27, 45, 255, 23, 19,
	36, 66, 89, 255, 6, 31, 44, 64, 68, 255, 7, 35, 6, 56, 107, 114, 255, 2,
	15, 39, 40, 41, 42, 43, 255, 0, 1, 2, 3, 31, 45, 9, 21, 45, 255 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 6, 13, 19, 26, 32, 37, 43, 49, 56, 62, 69, 70, 77, 84, 88, 91, 98, 103,
	109, 115, 122, 129, 134, 141, 150, 155, 161, 165, 171, 176, 181, 187, 195,
	201, 204, 213, 219, 224, 230, 234, 241, 247, 254, 266, 272, 276 };
static const weights_size_t modelExtLinksBoundaries[] = {
	6, 12, 18, 25, 31, 37, 43, 49, 55, 61, 67, 70, 76, 82, 85, 91, 97, 103,
	109, 115, 121, 128, 134, 140, 146, 151, 157, 162, 168, 172, 178, 184, 190,
	196, 203, 209, 214, 221, 225, 233, 240, 246, 252, 259, 267, 273, 277 };

static const coeff_t modelFuncCoeffs[] = {
	37.506241, 40, 25.037502, 15.658431, 30.024981, 10.252777, 27.531242, 36.259399,
	30.024961, 40, 39.999981, 19.190258, 40, 39.999985, 12.418029, 39.999977,
	24.939068, 40, 40, 39.999977, 27.531242, 39.999992, 40, 40, 40, 14.436855,
	13.922366, 32.518753, 40, 34.841373, 40, 25.037502, 40, 39.999985, 21.920282,
	33.453793, 25.037518, 40, 14.970758, 1.348093, 40, 39.999992, 39.999985,
	21.296869, 33.921494, 30.024988, 34.417068 };

static const neurons_size_t modelOutputNeurons[] = {
	25, 14, 44, 11, 27, 33, 29, 38, 36, 46 };

#endif // INCLUDED_BY_NEUTON_C

